{{- if .Values.configHelper.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: config-helper-api
  {{- if and
    (hasKey .Values "configHelper")
    (hasKey .Values.configHelper "api")
    (hasKey .Values.configHelper.api "name")
  }}
  name: {{ .Values.configHelper.api.name | default "config-helper-api" }}
  {{- else }}
  name: "config-helper-api"
  {{- end}} 
  namespace: {{ .Release.Namespace }}
spec:
  {{- if and
    (hasKey .Values "configHelper")
    (hasKey .Values.configHelper "api")
    (hasKey .Values.configHelper.api "replicaCount")
  }}
  replicas: {{ .Values.configHelper.api.replicaCount | default "1" }}
  {{- else }}
  replicas: 1
  {{- end}} 
  selector:
    matchLabels:
      app: config-helper-api
  template:
    metadata:
      labels:
        app: config-helper-api
    spec:
      containers:
      containers:
      {{- if and
          (hasKey .Values "configHelper")
          (hasKey .Values.configHelper "api")
          (hasKey .Values.configHelper.api "image")
          (hasKey .Values.configHelper.api.image "repository")
          (hasKey .Values.configHelper.api.image "tag")
      }}
      - image: '{{ .Values.configHelper.api.image.repository }}:{{ .Values.configHelper.api.image.tag }}'
      {{- else }}
      - image: 'aveshadev/smartscaler-config-helper-ui:latest'
      {{- end}} 
      {{- if and
          (hasKey .Values "configHelper")
          (hasKey .Values.configHelper "api")
          (hasKey .Values.configHelper.api "imagePullPolicy")
      }}
        imagePullPolicy: {{ .Values.configHelper.api.imagePullPolicy | default "Always" }}
      {{- else }}
        imagePullPolicy: "Always"
      {{- end}} 
      {{- if and
          (hasKey .Values "configHelper")
          (hasKey .Values.configHelper "api")
          (hasKey .Values.configHelper.api "name")
      }}
        name: {{ .Values.configHelper.api.name | default "config-helper-api" }}
      {{- else }}
        name: "config-helper-api"
      {{- end}} 
        ports:
          - name: http1
            {{- if and
              (hasKey .Values "configHelper")
              (hasKey .Values.configHelper "api")
              (hasKey .Values.configHelper.api "service")
              (hasKey .Values.configHelper.api.service "targetPort")
            }}
            containerPort: {{ .Values.configHelper.api.service.targetPort | default "8080" }}
          {{- else }}
            containerPort: 8080
          {{- end}} 
            protocol: TCP
        env:
        - name: DDOG_HOST
          {{- if hasKey .Values "inferenceAgent" }}
          {{- if .Values.inferenceAgent }} 
          {{- if hasKey .Values.inferenceAgent "inferenceAgentConfig" }}
          {{- if .Values.inferenceAgent.inferenceAgentConfig }}
          {{- if hasKey .Values.inferenceAgent.inferenceAgentConfig "app_datasource" }}
          {{- if hasKey .Values.inferenceAgent.inferenceAgentConfig.app_datasource "datadog" }}
          {{- if hasKey .Values.inferenceAgent.inferenceAgentConfig.app_datasource.datadog "url" }}
          {{- if .Values.inferenceAgent.inferenceAgentConfig.app_datasource.datadog.url }} 
          value: {{ .Values.inferenceAgent.inferenceAgentConfig.app_datasource.datadog.url | default "NOT-PROVIDED" }}
          {{- end}}
          {{- end}}
          {{- end}}
          {{- end}}
          {{- end}}
          {{- end}}
          {{- end}}
          {{- end}}
        - name: DDOG_API_TOKEN
          valueFrom:
            secretKeyRef:
              name: {{ template "datadog.secretName" . }}
              key: DD_API_KEY
              optional: true
        - name: DDOG_APP_TOKEN
          valueFrom:
            secretKeyRef:
              name: {{ template "datadog.secretName" . }}
              key: DD_APP_KEY
              optional: true
        - name: PROMETHEUS_HOST
          {{- if hasKey .Values "inferenceAgent" }}
          {{- if .Values.inferenceAgent }} 
          {{- if hasKey .Values.inferenceAgent "inferenceAgentConfig" }}
          {{- if .Values.inferenceAgent.inferenceAgentConfig }}
          {{- if hasKey .Values.inferenceAgent.inferenceAgentConfig "app_datasource" }}
          {{- if hasKey .Values.inferenceAgent.inferenceAgentConfig.app_datasource "prometheus" }}
          {{- if hasKey .Values.inferenceAgent.inferenceAgentConfig.app_datasource.prometheus "url" }} 
          {{- if .Values.inferenceAgent.inferenceAgentConfig.app_datasource.prometheus.url }} 
          value: {{.Values.inferenceAgent.inferenceAgentConfig.app_datasource.prometheus.url | default "NOT-PROVIDED" }}
           {{- end}}
           {{- end}}
           {{- end}}
           {{- end}}
           {{- end}}
           {{- end}}
           {{- end}}
           {{- end}}
        - name: PROMETHEUS_USER
          valueFrom:
            secretKeyRef:
              name: {{ template "prometheus.secretName" . }}
              key: username_prom
              optional: true
        - name: PROMETHEUS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ template "prometheus.secretName" . }}
              key: password_prom
              optional: true
        - name: TENANT_NAME
          {{- if hasKey .Values.agentConfiguration "clientID" }}
          {{- if .Values.agentConfiguration.clientID }}
          value: {{ .Values.agentConfiguration.clientID | default "NOT-PROVIDED" }}
          {{- end}}
          {{- end}}
        - name: CLUSTER_NAME
          {{- if hasKey .Values.agentConfiguration "clusterDisplayName" }}
          {{- if .Values.agentConfiguration.clusterDisplayName }}
          value: {{ .Values.agentConfiguration.clusterDisplayName | default "NOT-PROVIDED" }}
          {{- end}}
          {{- end}}
        - name: METRICSGATEWAY_USERNAME
          {{- if hasKey .Values "smartscalerMetrics" }}
          {{- if .Values.smartscalerMetrics.username }}
          value: {{ .Values.smartscalerMetrics.username  | b64enc | quote | default "NOT-PROVIDED" }}
          {{- end}}
          {{- end}}
        - name: METRICSGATEWAY_PASSWORD
          {{- if hasKey .Values "smartscalerMetrics" }}
          {{- if .Values.smartscalerMetrics.password }}
          value: {{ .Values.smartscalerMetrics.password  | b64enc | quote | default "NOT-PROVIDED" }}
          {{- end}}
          {{- end}}
        # livenessProbe:
        #   httpGet:
        #     path: /
        #     port: http
        # readinessProbe:
        #   httpGet:
        #     path: /
        #     port: http
        resources:
        {{- if and
            (hasKey .Values "configHelper")
            (hasKey .Values.configHelper "api")
            (hasKey .Values.configHelper.api "resources")
        }}
        {{ toYaml .Values.configHelper.api.resources | indent 12 }}
        {{- end}} 
        {{- if and
        (hasKey .Values "configHelper")
        (hasKey .Values.configHelper "api")
        (hasKey .Values.configHelper.api "name")
        }}
      serviceAccountName: {{ .Values.configHelper.api.name | default "config-helper-api" }}
      {{- else }}
      serviceAccountName: config-helper-api
      {{- end}} 
      imagePullSecrets:
        - name: {{ .Values.imagePullSecretsName }}
---
apiVersion: v1
kind: Service
metadata:
  {{- if and
    (hasKey .Values "configHelper")
    (hasKey .Values.configHelper "api")
    (hasKey .Values.configHelper.api "name")
  }}
  name: {{ .Values.configHelper.api.name | default "config-helper-api" }}
  {{- else }}
  name: "config-helper-api"
  {{- end}}
  namespace: {{ .Release.Namespace }}
spec:
  selector:
    app: config-helper-api
  ports:
    - protocol: TCP
      {{- if and
        (hasKey .Values "configHelper")
        (hasKey .Values.configHelper "api")
        (hasKey .Values.configHelper.api "service")
        (hasKey .Values.configHelper.api.service "port")
      }}
      port: {{ .Values.configHelper.api.service.port | default "80"}}
      {{- else }}
      port: 80
      {{- end}}
      {{- if and
        (hasKey .Values "configHelper")
        (hasKey .Values.configHelper "api")
        (hasKey .Values.configHelper.api "service")
        (hasKey .Values.configHelper.api.service "targetPort")
      }}
      targetPort: {{ .Values.configHelper.api.service.targetPort | default "8080"}}
      {{- else }}
      targetPort: 8080
      {{- end}}
  {{- if and
    (hasKey .Values "configHelper")
    (hasKey .Values.configHelper "api")
    (hasKey .Values.configHelper.api "service")
    (hasKey .Values.configHelper.api.service "targetPort")
  }}
  type: {{ .Values.configHelper.api.service.type | default "ClusterIP" }}
  {{- else }}
  type: "ClusterIP"
  {{- end}} 

---
# The service account for smartscaler-agent-configHelper
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "config-helper-api"
  namespace: {{ .Release.Namespace }}
  labels:
    app.kubernetes.io/name: "config-helper-api"
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: "config-helper-api"
  labels:
    app.kubernetes.io/name: "config-helper-api"
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
rules:
  - apiGroups: [""]
    resources: ["pods", "services", "namespaces"]
    verbs: ["get", "list", "watch"]
  - apiGroups: ["apps"]
    resources: ["deployments", "statefulsets"]
    verbs: ["get", "list", "watch"]
  - apiGroups: ["autoscaling"]
    resources: ["horizontalpodautoscalers"]
    verbs: ["get", "list", "watch"]
  - apiGroups: ["keda.sh"]
    resources: ["scaledobjects"]
    verbs: ["get", "list", "watch"]
---
# The cluster role binding for smartscaler-agent-configHelper
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: "config-helper-api"
  labels:
    app.kubernetes.io/name: "config-helper-api"
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
roleRef:
  kind: ClusterRole
  name: "config-helper-api"
  apiGroup: rbac.authorization.k8s.io
subjects:
  - kind: ServiceAccount
    name: "config-helper-api"
    namespace: {{ .Release.Namespace }}
{{- end}}
