agentConfiguration:
  host: https://gateway.saas.smart-scaler.io
  clusterDisplayName: tutorial-agent
  clientID: tenant-apollo
  # Do not change this
  clientSecret: LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0tCk1JSUV2Z0lCQURBTkJna3Foa2lHOXcwQkFRRUZBQVNDQktnd2dnU2tBZ0VBQW9JQkFRREVDcThpV0xVM3plQzUKcDE0RTlXakpPcnFndnZ3b3hlc250cG42Z3o0dlFKRXBVRWNUQmp1VndIaXpHWEEvbXBxUXB3TCt3VVFNWjR2RQpYNk1ZZ2FBdCttQ0hUN09OMWRYYTBjbUFsQlhnNkN6bHVJeW9yQnY0dytDNWZJb3hZMHNlY3BjbVZDaUg5SllVCllSMm1MQzFXbVRJMVNNVnJLWStRaGVhQ3VrOEpGOWFKQ0YrbmJ2eUJVMGJWQ2FkVVpCTFFMQlQwd2UrK0l2UnQKemw5eXlxeEg3U21MVS9UMnMxcE5JS2cwbVZiV09VQnRsc1RJMjVrdFJaR2EwN3RvdlU5b1pmN0pBd3MwV0F1bgpadlZha28wSldGN3E0WjVCL2U1RWpYay9STnM1Zi9PWjR1UDV0cWQ2eWpDMktRdG1qYUtTQ05yRnA2VkphME10ClpWQmNHVVF4QWdNQkFBRUNnZ0VBRlBCV3N5YVNLWVVVK2dObk9vU2JSZlgrd2NWUVljcjg4a3VSdi9UMVp2N2cKbWs3cm5udXhrTTNEWG83S28xS0FMSS9ZRlMxL2x3c1d2YmxnemxEbkVzNGRzZ29vWVk5N3hXRFhvc0wrWUx5dgpzZlFmbXZMeUZHU1lpN3RDZCtLMC91b3FuSUtMNXpTUHRKcklXOHUzWm5yYnB0OFFUZ0U5QnlqVUhYV29sQzMrCld6RG52ckxGd05XVW5uaW92eU1mRDZUdzFTQVQ3WGlnSEV6WWt2bWsvQmY5dFhDb0hYejNNN3dBZ1NsUGxTVWQKTkRtNFdLYk1pcUlxVFBSLytDS0N2blNsUjRFSENQbkpNc0pkUnVZTjlWbC9LUXpDNHVpT2FHb2hFc2hEbDJQNQoraEVpUndSd3JzdDJnd2JlMkplVTh5cktZbnFtOUZ4MnFRNklmT1BxZVFLQmdRRDZObWZsMFpLcFI0eFcwOWZECk5sd08rY1Jad0N0c3V5MDRhaUFRMGdRNHlXMXB3THMvZU5wcUMvK1JtQWRLbU96eDNPdEU3cGVaWkpZUlRuaHUKKzFWckcvK05MdlBJUVh1alpPaXZ3UW11eVF3NVVSV3U3WkFqYmFYZ202WUJ2WURRRkdyM2ovTXh1ZmJaT3ZVLwpyQTdSSXhhaTlsRWREc3l1c3NWNWpoSkRXUUtCZ1FESWs0T3pXdHZrZi9PSG5NSDlwdTRWTEErL3M0MGJNZ0lJCmkwOWU0SXlGdm5rL0g4cWg1STZoZXQrcFNYL0xRdmtvR2dyQTNBNlJ4ZU90bi8yVjJad1ErUE9IdnN0UVVNNjIKdTQyK3Y3VlYvZDJyNE1iWllES3kxZVhJSSs5ZUczd3BJMTV5bE5pN3FCLzdKRVpZMmpYby9ZdXVoSUZ3TFlMbwphVU9MRVJxa21RS0JnUURjeU1jekpwTTRaaGJ5d3VsZnF3YmVmQXlEZWF1WHZTNXcya3hESzE1b1VXMEhaUGFWClVtbkFLNmd1NjZ4N2FhZWkzK0tHSjlhRGx4dElXQ3F6RzNuTEVxQ1VEdnMwR0h3bHVMUU42ZE5HZE1jaGlHZ08KdkRkMDI1c0VMN1B6VXlsbjhxeFVtS1BxbkFLeXVuQ1A1NTRIY3VQVmxtNEtxdlYzcmUzTWpjMlZ1UUtCZ0g3KwpGd2E1NGp1Y1gzNWZXOXZUa3k1SWhYZ2tvSlMxWnVBdUJBVFlPMkI2cHAyMjdUN3ZUUGNrcXZPdUc0R0FWK3h5CkFKajNPeXBFbHREWldWOUZOakR3enBBRjF3aDFBVXhsRjJ2TVNXMjJuR0Uwb2ZJRG5GWHFZK0FDRUk0TzdOL0gKQ3dlVkFseGVLRkdFT0I0Tm10QjNwN2JKSW9MNTdjWmt6MlQvWVZVUkFvR0JBTlhNTXRYRXZwWkZ0NndQUWQwTQpXSUxjMERBR3dMaFVhRXMxOS9LZzFVVFdDUXZZVjNPVzVaQmVSRkNWNWRuYlAwMitrbkFmM09pa3ltd2tOSWRzCmI4Sko5YlZ6RndkYlA0WDdTWlVIYzVEbXZrSEw3Wm5HMVJReW1BdXpwM21DditLSlVmZGlhNFlVdHBDOUlpdzMKU3JxTUpBQlVqeFBwS2kyQlZkMnlPbUQ1Ci0tLS0tRU5EIFBSSVZBVEUgS0VZLS0tLS0K

eventAutoscaler:
  # time duration before the eventstarttime when first PR would be created
  # eg. 1h, 1d, 1w
  # default: 1h
  autoscalerProperties:
    eventConfigSyncFrequency: 5m
    defaultPrCreationDuration: 1h
    watchInterval: 5m # Interval to watch argocd application
    # Interval to wait (in seconds) before retrying failed PR creation
    defaultRetryInterval: 15
    # Number of times to retry failed PR creation
    defaultMaxRetryAttempts: 5
    scalingController:
      apiVersion: keda.sh/v1alpha1
      kind: ScaledObject
    pullRequestMergeSettings:
      autoMergeEnabled: true
      # time duration before the event-start when PR would be merged
      defaultMergeDuration: 5m
      # Force merge PR if auto merge fails
      forceMergeEnabled: false
  gitProperties:
    commitPrefix: "ci()"
    commitSuffix: "- Avesha Agent"
    commitSignoff: false
    commitAuthorName: ""
    commitAuthorEmail: ""
    prTitleFormat: "ci(): %s"
    prDescriptionFormat: ""
    prAssignees: []
    prReviewers: []
    prLabels: []
  logLevel: DEBUG
  image:
    repository: aveshasystems/agent-controller
    tag: v0.5.2
    pullPolicy: IfNotPresent
  gitOperationsService:
    name: git-operations
    image:
      repository: aveshasystems/autoscaler-git-operations
      tag: v0.2.6
      pullPolicy: IfNotPresent
inferenceAgent:
  image:
    repository: aveshasystems/smart-scaler-agent
    tag: v1.8.1
    pullPolicy: IfNotPresent
  inferenceAgentConfig:
  #  Please add your config in this section in the following format
    app_datasource:
      datadog:
        url: ""
      prometheus:
        url: "http://34.42.148.164:9090/"
    # smartscaler_api:
  #   url: ""
  # metric_interval:
  # push_interval:
  # smartscaler_job_name: ""
  # app:
  # - metric_labels:
  #     app: ""
  #     customer: ""
  #     app_version:
  #   metrics:
  #   - name: ""
  #     description: ""
  #     query: ""

imagePullSecretsName: "smart-scaler-image-pull-secret"
# leave the below fields empty if secrets are managed externally.
imagePullSecrets:
  repository: ## Value to be used incase using the docker hub images-  https://index.docker.io/v1/
  username:
  password:
  email:
  dockerconfigjson: ## Value to be used if using external secret mangers
dataSources:
  datadog:
    existingSecret: "" ## if existingSecret value is provided then below values will be ignored, use below keys in existing secret
    apiKey: ""
    appkey: ""
  prometheus:
    existingSecret: "" ## if existingSecret value is provided then below values will be ignored, use below keys in existing secret
    username: ""
    password: ""
smartscalerApi:
  existingSecret: "" ## if existingSecret value is provided then below values will be ignored, use below keys in existing secret
  username: ""
  password: ""
smartscalerMetrics:
  existingSecret: "" ## if existingSecret value is provided then below values will be ignored, use below keys in existing secret
  username: ""
  password: ""

configHelper:
  enabled: false
  api:
    replicaCount: 1
    name: "config-helper-api"
    image:
      repository: aveshadev/smartscaler-config-helper-api
      tag: 1.0.2-SNAPSHOT-2d30b9f3
      pullPolicy: IfNotPresent

    service:
      name: config-helper-api
      type: ClusterIP
      port: 80
      targetPort: 8080

    resources: {}
      # limits:
      #  cpu: 100m
      #  memory: 128Mi
      # requests:
      #  cpu: 100m
      #  memory: 128Mi
  ui:
    replicaCount: 1
    name: "config-helper-ui"
    image:
      repository: aveshadev/smartscaler-config-helper-ui
      tag: 1.0.1-SNAPSHOT-29f62a9f
      pullPolicy: IfNotPresent

    service:
      name: config-helper-ui
      type: ClusterIP
      port: 80
      targetPort: 3000

    resources: {}
      # limits:
      #  cpu: 100m
      #  memory: 128Mi
      # requests:
      #  cpu: 100m
      #  memory: 128Mi
