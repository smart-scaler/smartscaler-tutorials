---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.11.1
  creationTimestamp: null
  name: applicationconfigs.agent.smart-scaler.io
spec:
  group: agent.smart-scaler.io
  names:
    kind: ApplicationConfig
    listKind: ApplicationConfigList
    plural: applicationconfigs
    singular: applicationconfig
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: ApplicationConfig is the Schema for the applicationconfigs API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: ApplicationConfigSpec defines the desired state of ApplicationConfig
            properties:
              applicationDetails:
                properties:
                  customServiceListRef:
                    description: CustomServiceListRef defines the custom service list
                      reference. The custom service list is a configMap in controller
                      namespace.
                    properties:
                      name:
                        description: The name of the ConfigMap resource being referred
                          to.
                        type: string
                      namespace:
                        description: Namespace of the resource being referred to.
                        type: string
                    required:
                    - name
                    - namespace
                    type: object
                  gitConfiguration:
                    description: GitConfiguration defines the global git configuration
                    properties:
                      branch:
                        type: string
                      destinationContext:
                        default: in-cluster
                        type: string
                      maxReplicasCustomKey:
                        type: string
                      minReplicasCustomKey:
                        type: string
                      path:
                        type: string
                      repository:
                        type: string
                      secretRef:
                        description: Secret Reference where the git credentials are
                          stored
                        properties:
                          name:
                            description: The name of the Secret resource being referred
                              to.
                            type: string
                          namespace:
                            description: Namespace of the resource being referred
                              to.
                            type: string
                        type: object
                    type: object
                  services:
                    description: ServiceConfigs defines the list of services to be
                      scaled. This can be auto-detected or user provided.
                    items:
                      properties:
                        gitConfiguration:
                          properties:
                            branch:
                              type: string
                            destinationContext:
                              default: in-cluster
                              type: string
                            maxReplicasCustomKey:
                              type: string
                            minReplicasCustomKey:
                              type: string
                            path:
                              type: string
                            repository:
                              type: string
                            secretRef:
                              description: Secret Reference where the git credentials
                                are stored
                              properties:
                                name:
                                  description: The name of the Secret resource being
                                    referred to.
                                  type: string
                                namespace:
                                  description: Namespace of the resource being referred
                                    to.
                                  type: string
                              type: object
                          type: object
                        scaledObjectConfig:
                          properties:
                            deploymentRef:
                              properties:
                                name:
                                  type: string
                                namespace:
                                  type: string
                              required:
                              - name
                              - namespace
                              type: object
                            kind:
                              type: string
                            name:
                              type: string
                            namespace:
                              type: string
                            path:
                              type: string
                          required:
                          - kind
                          type: object
                      type: object
                    type: array
                type: object
              argocdApplicationRef:
                description: ArgoCDApplicationRef defines the ArgoCD Application CR
                  reference
                properties:
                  name:
                    type: string
                  namespace:
                    type: string
                required:
                - name
                - namespace
                type: object
            type: object
          status:
            properties:
              applicationConfigID:
                type: string
              applicationDetails:
                description: ApplicationDetails contains details about the application
                properties:
                  customServiceListRef:
                    description: CustomServiceListRef defines the custom service list
                      reference. The custom service list is a configMap in controller
                      namespace.
                    properties:
                      name:
                        description: The name of the ConfigMap resource being referred
                          to.
                        type: string
                      namespace:
                        description: Namespace of the resource being referred to.
                        type: string
                    required:
                    - name
                    - namespace
                    type: object
                  gitConfiguration:
                    description: GitConfiguration defines the global git configuration
                    properties:
                      branch:
                        type: string
                      destinationContext:
                        default: in-cluster
                        type: string
                      maxReplicasCustomKey:
                        type: string
                      minReplicasCustomKey:
                        type: string
                      path:
                        type: string
                      repository:
                        type: string
                      secretRef:
                        description: Secret Reference where the git credentials are
                          stored
                        properties:
                          name:
                            description: The name of the Secret resource being referred
                              to.
                            type: string
                          namespace:
                            description: Namespace of the resource being referred
                              to.
                            type: string
                        type: object
                    type: object
                  services:
                    description: ServiceConfigs defines the list of services to be
                      scaled. This can be auto-detected or user provided.
                    items:
                      properties:
                        gitConfiguration:
                          properties:
                            branch:
                              type: string
                            destinationContext:
                              default: in-cluster
                              type: string
                            maxReplicasCustomKey:
                              type: string
                            minReplicasCustomKey:
                              type: string
                            path:
                              type: string
                            repository:
                              type: string
                            secretRef:
                              description: Secret Reference where the git credentials
                                are stored
                              properties:
                                name:
                                  description: The name of the Secret resource being
                                    referred to.
                                  type: string
                                namespace:
                                  description: Namespace of the resource being referred
                                    to.
                                  type: string
                              type: object
                          type: object
                        scaledObjectConfig:
                          properties:
                            deploymentRef:
                              properties:
                                name:
                                  type: string
                                namespace:
                                  type: string
                              required:
                              - name
                              - namespace
                              type: object
                            kind:
                              type: string
                            name:
                              type: string
                            namespace:
                              type: string
                            path:
                              type: string
                          required:
                          - kind
                          type: object
                      type: object
                    type: array
                type: object
              conditions:
                description: Conditions holds a list of conditions related to the
                  application configuration.
                items:
                  description: Condition represents the condition of the custom resource
                  properties:
                    lastTransitionTime:
                      format: date-time
                      type: string
                    message:
                      type: string
                    reason:
                      type: string
                    status:
                      type: string
                    type:
                      type: string
                  required:
                  - status
                  - type
                  type: object
                type: array
              lastSyncTime:
                description: LastSyncTime indicates the last time the application
                  configuration was synchronized.
                format: date-time
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.11.1
  creationTimestamp: null
  name: eventconfigs.agent.smart-scaler.io
spec:
  group: agent.smart-scaler.io
  names:
    kind: EventConfig
    listKind: EventConfigList
    plural: eventconfigs
    singular: eventconfig
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: EventConfig is the Schema for the eventconfigs API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: EventConfigSpec defines the desired state of EventConfig
            properties:
              applicationConfigName:
                description: ApplicationConfigName is the name of ApplicationConfig
                type: string
              cooldownDuration:
                type: string
              destinationContexts:
                default:
                - in-cluster
                items:
                  type: string
                type: array
              displayName:
                description: DisplayName is the display name of the event for git
                  operations
                type: string
              eventEndTimestamp:
                description: EventEndTimestamp is the end time of the event
                format: date-time
                type: string
              eventStartTimestamp:
                description: EventStartTimestamp is the start time of the event
                format: date-time
                type: string
              scalingConfiguration:
                properties:
                  maxScalingFactor:
                    description: MaxScalingFactor represents the highest scaling factor
                      for the event. For instance, if you anticipate a maximum of
                      a 20x or 20.5x increase in traffic for your event, set the value
                      to 20 or 20.5. This parameter also supports decimal values.
                    type: string
                  minScalingFactor:
                    description: MinScalingFactor is the smallest scaling factor applicable
                      to the event. For example, if you anticipate a minimum of a
                      10x or 10.5x increase in traffic for your event, set the value
                      to 10 or 10.5. This parameter also supports decimal values..
                    type: string
                type: object
              scalingRatioConfigName:
                description: Scaling ratio is the name of ScalingratioConfig
                type: string
            required:
            - applicationConfigName
            - displayName
            - eventEndTimestamp
            - eventStartTimestamp
            type: object
          status:
            description: EventConfigStatus defines the observed state of EventConfig
            properties:
              conditions:
                items:
                  description: Condition represents the condition of the custom resource
                  properties:
                    lastTransitionTime:
                      format: date-time
                      type: string
                    message:
                      type: string
                    reason:
                      type: string
                    status:
                      type: string
                    type:
                      type: string
                  required:
                  - status
                  - type
                  type: object
                type: array
              eventID:
                type: string
              eventProgressStatus:
                description: event status
                properties:
                  eventStatus:
                    type: string
                  inProgress:
                    type: boolean
                  isEventRaised:
                    type: boolean
                  isPRmerged:
                    type: boolean
                  pullRequestURL:
                    type: string
                  retryCount:
                    type: integer
                type: object
              lastSyncTime:
                format: date-time
                type: string
              parentEventID:
                type: string
              serviceConfigs:
                items:
                  properties:
                    appliedScalingRatio:
                      type: string
                    destinationContext:
                      type: string
                    eventProgressStatus:
                      properties:
                        eventStatus:
                          type: string
                        inProgress:
                          type: boolean
                        isEventRaised:
                          type: boolean
                        isPRmerged:
                          type: boolean
                        pullRequestURL:
                          type: string
                        retryCount:
                          type: integer
                      type: object
                    kind:
                      type: string
                    name:
                      type: string
                    originalMax:
                      format: int32
                      type: integer
                    originalMin:
                      format: int32
                      type: integer
                  required:
                  - kind
                  - name
                  - originalMax
                  - originalMin
                  type: object
                type: array
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.11.1
  creationTimestamp: null
  name: eventconfigsets.agent.smart-scaler.io
spec:
  group: agent.smart-scaler.io
  names:
    kind: EventConfigSet
    listKind: EventConfigSetList
    plural: eventconfigsets
    singular: eventconfigset
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: EventConfigSet is the Schema for the eventconfigsets API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: EventConfigSetSpec defines the desired state of EventConfigSet
            properties:
              recurrenceConfig:
                properties:
                  cleanupCompletedEvents:
                    type: boolean
                  concurrentFutureEvents:
                    default: 3
                    type: integer
                  endDate:
                    format: date-time
                    type: string
                  schedule:
                    type: string
                  startDate:
                    format: date-time
                    type: string
                required:
                - endDate
                - schedule
                - startDate
                type: object
              template:
                properties:
                  metadata:
                    properties:
                      name:
                        type: string
                    required:
                    - name
                    type: object
                  spec:
                    properties:
                      applicationConfigName:
                        description: ApplicationConfigName is the name of ApplicationConfig
                        type: string
                      cooldownDuration:
                        type: string
                      destinationContexts:
                        default:
                        - in-cluster
                        items:
                          type: string
                        type: array
                      displayName:
                        description: DisplayName is the display name of the event
                          for git operations
                        type: string
                      eventDuration:
                        description: eventDuration is the duration of the event
                        type: string
                      scalingConfiguration:
                        properties:
                          maxScalingFactor:
                            description: MaxScalingFactor represents the highest scaling
                              factor for the event. For instance, if you anticipate
                              a maximum of a 20x or 20.5x increase in traffic for
                              your event, set the value to 20 or 20.5. This parameter
                              also supports decimal values.
                            type: string
                          minScalingFactor:
                            description: MinScalingFactor is the smallest scaling
                              factor applicable to the event. For example, if you
                              anticipate a minimum of a 10x or 10.5x increase in traffic
                              for your event, set the value to 10 or 10.5. This parameter
                              also supports decimal values..
                            type: string
                        type: object
                      scalingRatioConfigName:
                        description: Scaling ratio is the name of ScalingratioConfig
                        type: string
                    required:
                    - applicationConfigName
                    - displayName
                    - eventDuration
                    type: object
                type: object
            type: object
          status:
            description: EventConfigSetStatus defines the observed state of EventConfigSet
            properties:
              conditions:
                description: Condition represents the condition of the custom resource
                properties:
                  type:
                    type: string
                required:
                - type
                type: object
              eventID:
                type: string
              lastGeneratedIteration:
                type: integer
            required:
            - lastGeneratedIteration
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.11.1
  
  name: externalstores.agent.smart-scaler.io
spec:
  group: agent.smart-scaler.io
  names:
    kind: ExternalStore
    listKind: ExternalStoreList
    plural: externalstores
    singular: externalstore
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: ExternalStore is the Schema for the externalstores API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: ExternalStoreSpec defines the desired state of ExternalStore
            properties:
              vault:
                properties:
                  auth:
                    description: Auth configures how secret-manager authenticates
                      with the Vault server.
                    properties:
                      kubernetes:
                        description: Kubernetes authenticates with Vault by passing
                          the ServiceAccount token stored in the named Secret resource
                          to the Vault server.
                        properties:
                          mountPath:
                            default: kubernetes
                            description: 'Path where the Kubernetes authentication
                              backend is mounted in Vault, e.g: "kubernetes"'
                            type: string
                          role:
                            description: A required field containing the Vault Role
                              to assume. A Role binds a Kubernetes ServiceAccount
                              with a set of Vault policies.
                            type: string
                          serviceAccountRef:
                            description: Optional service account field containing
                              the name of a kubernetes ServiceAccount. If the service
                              account is specified, the service account secret token
                              JWT will be used for authenticating with Vault. If the
                              service account selector is not supplied, the secretRef
                              will be used instead.
                            properties:
                              name:
                                description: The name of the ServiceAccount resource
                                  being referred to.
                                type: string
                              namespace:
                                description: Namespace of the resource being referred
                                  to. Ignored if referent is not cluster-scoped. cluster-scoped
                                  defaults to the namespace of the referent.
                                type: string
                            required:
                            - name
                            type: object
                        required:
                        - mountPath
                        - role
                        type: object
                      tokenSecretRef:
                        description: TokenSecretRef authenticates with Vault by presenting
                          a token.
                        properties:
                          key:
                            description: The key of the entry in the Secret resource's
                              `data` field to be used. Some instances of this field
                              may be defaulted, in others it may be required.
                            type: string
                          name:
                            description: The name of the Secret resource being referred
                              to.
                            type: string
                          namespace:
                            description: Namespace of the resource being referred
                              to. Ignored if referent is not cluster-scoped. cluster-scoped
                              defaults to the namespace of the referent.
                            type: string
                        type: object
                    type: object
                  path:
                    description: 'Path is the mount path of the Vault KV backend endpoint,
                      e.g: "secret". The v2 KV secret engine version specific "/data"
                      path suffix for fetching secrets from Vault is optional and
                      will be appended if not present in specified path.'
                    type: string
                  server:
                    description: 'Server is the connection address for the Vault server,
                      e.g: "https://vault.example.com:8200".'
                    type: string
                  version:
                    default: v2
                    description: Version is the Vault KV secret engine version. This
                      can be either "v1" or "v2". Version defaults to "v2".
                    enum:
                    - v1
                    - v2
                    type: string
                required:
                - auth
                - server
                type: object
            required:
            - vault
            type: object
          status:
            description: ExternalStoreStatus defines the observed state of ExternalStore
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.11.1
  creationTimestamp: null
  name: scalingratioconfigs.agent.smart-scaler.io
spec:
  group: agent.smart-scaler.io
  names:
    kind: ScalingRatioConfig
    listKind: ScalingRatioConfigList
    plural: scalingratioconfigs
    singular: scalingratioconfig
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: ScalingRatioConfig is the Schema for the scalingratioconfigs
          API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: ScalingRatioConfigSpec defines the desired state of ScalingRatioConfig
            properties:
              scaling_ratios:
                items:
                  properties:
                    source:
                      type: string
                    target:
                      type: string
                    weight:
                      description: 'cannot use as float: generator gives error Please
                        consider serializing your float as string instead. If you
                        are really sure you want to use them, re-run with crd:allowDangerousTypes=true'
                      type: string
                  required:
                  - source
                  - target
                  - weight
                  type: object
                type: array
            required:
            - scaling_ratios
            type: object
          status:
            description: ScalingRatioConfigStatus defines the observed state of ScalingRatioConfig
            properties:
              scalingRatioConfigID:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/created-by: agent-controller
    app.kubernetes.io/instance: controller-manager-sa
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: serviceaccount
    app.kubernetes.io/part-of: agent-controller
  name: agent-controller-controller-manager
  namespace: {{ .Release.Namespace }}
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/created-by: agent-controller
    app.kubernetes.io/instance: leader-election-role
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: role
    app.kubernetes.io/part-of: agent-controller
  name: agent-controller-leader-election-role
  namespace: {{ .Release.Namespace }}
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: agent-controller-manager-role
rules:
- apiGroups:
  - ""
  resources:
  - namespaces
  - nodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - agent.smart-scaler.io
  resources:
  - applicationconfigs
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - agent.smart-scaler.io
  resources:
  - applicationconfigs/finalizers
  verbs:
  - update
- apiGroups:
  - agent.smart-scaler.io
  resources:
  - applicationconfigs/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - agent.smart-scaler.io
  resources:
  - eventconfigs
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - agent.smart-scaler.io
  resources:
  - eventconfigs/finalizers
  verbs:
  - update
- apiGroups:
  - agent.smart-scaler.io
  resources:
  - eventconfigs/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - agent.smart-scaler.io
  resources:
  - eventconfigsets
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - agent.smart-scaler.io
  resources:
  - eventconfigsets/finalizers
  verbs:
  - update
- apiGroups:
  - agent.smart-scaler.io
  resources:
  - eventconfigsets/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - agent.smart-scaler.io
  resources:
  - scalingratioconfigs
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - agent.smart-scaler.io
  resources:
  - scalingratioconfigs/finalizers
  verbs:
  - update
- apiGroups:
  - agent.smart-scaler.io
  resources:
  - scalingratioconfigs/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - apps
  resources:
  - deployments
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - argoproj.io
  resources:
  - applications
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - argoproj.io
  resources:
  - applications/status
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - autoscaling
  resources:
  - horizontalpodautoscalers
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - configmaps
  - events
  - pods
  - secrets
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - keda.sh
  resources:
  - scaledobjects
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/component: kube-rbac-proxy
    app.kubernetes.io/created-by: agent-controller
    app.kubernetes.io/instance: metrics-reader
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: clusterrole
    app.kubernetes.io/part-of: agent-controller
  name: agent-controller-metrics-reader
rules:
- nonResourceURLs:
  - /metrics
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/component: kube-rbac-proxy
    app.kubernetes.io/created-by: agent-controller
    app.kubernetes.io/instance: proxy-role
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: clusterrole
    app.kubernetes.io/part-of: agent-controller
  name: agent-controller-proxy-role
rules:
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/created-by: agent-controller
    app.kubernetes.io/instance: leader-election-rolebinding
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: rolebinding
    app.kubernetes.io/part-of: agent-controller
  name: agent-controller-leader-election-rolebinding
  namespace: {{ .Release.Namespace }}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: agent-controller-leader-election-role
subjects:
- kind: ServiceAccount
  name: agent-controller-controller-manager
  namespace: {{ .Release.Namespace }}
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/created-by: agent-controller
    app.kubernetes.io/instance: manager-rolebinding
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: clusterrolebinding
    app.kubernetes.io/part-of: agent-controller
  name: agent-controller-manager-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: agent-controller-manager-role
subjects:
- kind: ServiceAccount
  name: agent-controller-controller-manager
  namespace: {{ .Release.Namespace }}
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/component: kube-rbac-proxy
    app.kubernetes.io/created-by: agent-controller
    app.kubernetes.io/instance: proxy-rolebinding
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: clusterrolebinding
    app.kubernetes.io/part-of: agent-controller
  name: agent-controller-proxy-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: agent-controller-proxy-role
subjects:
- kind: ServiceAccount
  name: agent-controller-controller-manager
  namespace: {{ .Release.Namespace }}
---


